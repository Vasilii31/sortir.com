{% extends 'base.html.twig' %}

{% block title %}Edit Sortie{% endblock %}

{% block body %}
    <h4 class="txt-custom-prim my-3">Modifier une sortie</h4>
    <div class="card my-3 p-4 shadow-sm">
        {{ form_start(form) }}
        {% include 'sortie/_form_fields.html.twig' %}
        <div class="d-flex justify-content-center gap-3 mt-4 align-items-center">
            {{ form_widget(form.enregistrer, {'attr': {'class': 'a-custom-sec'}}) }}
            {{ form_widget(form.publier, {'attr': {'class': 'a-custom-sec'}}) }}
            <a href="{{ path('app_sortie_index') }}" class="a-custom-warn-outline">Annuler</a>
            <!-- Bouton suppression lié au form externe -->
            <button class="a-custom-warn" form="delete-form">Supprimer</button>
        </div>
        {{ form_end(form) }}

        <!-- Formulaire de suppression caché -->
        <form id="delete-form" method="post" action="{{ path('app_sortie_delete', {'id': form.vars.value.id}) }}">
            <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ form.vars.value.id) }}">
        </form>

    </div>

    <!-- Modal Container -->
    <div id="lieu-modal-container">
        <!-- Modal pour créer un nouveau lieu -->
        <div class="modal fade" id="lieuModal" tabindex="-1" aria-labelledby="lieuModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="lieuModalLabel">Créer un nouveau lieu</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <form id="lieu-form" novalidate>
                        <input type="hidden" name="_token" value="{{ csrf_token('lieu_form') }}">
                        <div class="modal-body">
                            <div id="lieu-form-errors" class="alert alert-danger d-none"></div>

                            <div class="mb-3">
                                <label for="lieu_nom_lieu" class="form-label">Nom du lieu</label>
                                <input type="text" class="form-control" id="lieu_nom_lieu" name="lieu[nom_lieu]" placeholder="Restaurant, Parc, etc." required>
                            </div>

                            <div class="mb-3">
                                <label for="lieu_rue" class="form-label">Rue</label>
                                <input type="text" class="form-control" id="lieu_rue" name="lieu[rue]" placeholder="123 rue de la République">
                            </div>

                            <div class="mb-3">
                                <label for="lieu_ville" class="form-label">Ville</label>
                                <select class="form-control" id="lieu_ville" name="lieu[ville]" required>
                                    <option value="">Choisissez une ville</option>
                                </select>
                            </div>

                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label for="lieu_latitude" class="form-label">Latitude</label>
                                    <input type="number" step="any" class="form-control" id="lieu_latitude" name="lieu[latitude]" placeholder="48.8566">
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label for="lieu_longitude" class="form-label">Longitude</label>
                                    <input type="number" step="any" class="form-control" id="lieu_longitude" name="lieu[longitude]" placeholder="2.3522">
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="a-custom-warn-outline" data-bs-dismiss="modal">Annuler</button>
                            <button type="submit" class="a-custom-sec">Créer le lieu</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

        <script>
            // Wait for both DOM and Bootstrap to be ready
            function initializeLieuModal() {
                if (typeof bootstrap === 'undefined') {
                    setTimeout(initializeLieuModal, 100);
                    return;
                }

                const selectVille = document.getElementById('{{ form.ville.vars.id }}');
                const selectLieu  = document.getElementById('{{ form.lieu.vars.id }}');

                const spanRue      = document.getElementById('rue-display');
                const spanCp       = document.getElementById('ville-cp');
                const spanLatitude = document.getElementById('latitude');
                const spanLongitude= document.getElementById('longitude');
                const divDetails   = document.getElementById('lieu-details');

                const options = Array.from(selectLieu.querySelectorAll("option"))
                    .filter(opt => opt.value !== "");

                function resetLieu() {
                    selectLieu.innerHTML = '';
                    const placeholder = new Option('Choisissez un lieu', '', true, true);
                    placeholder.disabled = true;
                    selectLieu.appendChild(placeholder);
                    selectLieu.disabled = true;
                    updateLieuDetails();
                }

                function updateLieuOptions() {
                    const villeId = selectVille.value;
                    if (!villeId) {
                        resetLieu();
                        return;
                    }

                    selectLieu.disabled = false;
                    selectLieu.innerHTML = '';
                    const placeholder = new Option('Choisissez un lieu', '', true, true);
                    placeholder.disabled = true;
                    selectLieu.appendChild(placeholder);

                    options.forEach(opt => {
                        const optVilleId = String(opt.dataset.villeId);
                        const targetVilleId = String(villeId);
                        if (optVilleId === targetVilleId) {
                            selectLieu.appendChild(opt.cloneNode(true));
                        }
                    });

                    selectLieu.value = '';
                    updateLieuDetails();
                }

                function updateLieuDetails() {
                    const opt = selectLieu.options[selectLieu.selectedIndex];
                    if (!opt || !opt.value) {
                        spanRue.textContent = '';
                        spanCp.textContent = '';
                        spanLatitude.textContent = '';
                        spanLongitude.textContent = '';
                        divDetails.style.display = 'none';
                        return;
                    }
                    spanRue.textContent      = opt.dataset.rue || '';
                    spanCp.textContent       = opt.dataset.cp || '';
                    spanLatitude.textContent = opt.dataset.latitude || '';
                    spanLongitude.textContent= opt.dataset.longitude || '';
                    divDetails.style.display = 'block';
                }

                selectVille.addEventListener('change', updateLieuOptions);
                selectLieu.addEventListener('change', updateLieuDetails);

                // Initialize dropdown state - enable lieu dropdown by default
                const currentVilleValue = selectVille.value;
                const currentLieuValue = selectLieu.value;

                // Always enable lieu dropdown on page load and show all lieux
                selectLieu.disabled = false;

                if (currentVilleValue) {
                    updateLieuOptions();
                    if (currentLieuValue) {
                        selectLieu.value = currentLieuValue;
                        updateLieuDetails();
                    }
                } else {
                    // Show all lieux when no ville is selected
                    selectLieu.innerHTML = '';
                    const placeholder = new Option('Choisissez un lieu', '', true, true);
                    placeholder.disabled = true;
                    selectLieu.appendChild(placeholder);

                    options.forEach(opt => {
                        selectLieu.appendChild(opt.cloneNode(true));
                    });
                }

                // Modal handling
                const addLieuBtn = document.getElementById('add-lieu-btn');

                addLieuBtn.addEventListener('click', function() {
                    // Clear previous errors
                    const errorsDiv = document.getElementById('lieu-form-errors');
                    errorsDiv.classList.add('d-none');

                    // Load villes
                    fetch('{{ path('app_villes_list') }}', {
                        method: 'GET',
                        headers: { 'X-Requested-With': 'XMLHttpRequest' }
                    })
                    .then(response => response.json())
                    .then(villes => {
                        const villeSelect = document.getElementById('lieu_ville');
                        villeSelect.innerHTML = '<option value="">Choisissez une ville</option>';
                        villes.forEach(ville => {
                            const option = new Option(ville.nom_ville + ' (' + ville.code_postal + ')', ville.id);
                            villeSelect.appendChild(option);
                        });
                    })
                    .catch(() => {});

                    // Show modal immediately - Bootstrap is available
                    const modal = new bootstrap.Modal(document.getElementById('lieuModal'));
                    modal.show();
                });

                // Form submission
                document.getElementById('lieu-form').addEventListener('submit', function(e) {
                    e.preventDefault();

                    const formData = new FormData(this);
                    const errorsDiv = document.getElementById('lieu-form-errors');

                    const modalUrl = '{{ path('app_lieu_modal') }}';
                    fetch(modalUrl, {
                        method: 'POST',
                        headers: { 'X-Requested-With': 'XMLHttpRequest' },
                        body: formData
                    })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Erreur serveur (HTTP ' + response.status + ')');
                        }
                        return response.text().then(text => {
                            try {
                                return JSON.parse(text);
                            } catch (e) {
                                throw new Error('Réponse serveur invalide (pas de JSON)');
                            }
                        });
                    })
                    .then(data => {
                        if (data.success) {
                            const lieuSelect = document.getElementById('{{ form.lieu.vars.id }}');
                            const villeSelect = document.getElementById('{{ form.ville.vars.id }}');

                            const newOption = new Option(data.lieu.nom_lieu, data.lieu.id);
                            newOption.dataset.villeId = String(data.lieu.ville_id);
                            newOption.dataset.rue = data.lieu.rue || '';
                            newOption.dataset.ville = data.lieu.ville_nom || '';
                            newOption.dataset.cp = data.lieu.ville_cp || '';
                            newOption.dataset.latitude = data.lieu.latitude || '';
                            newOption.dataset.longitude = data.lieu.longitude || '';

                            options.push(newOption);

                            // Select the ville of the new lieu first
                            villeSelect.value = data.lieu.ville_id;

                            // Then update lieu options and select the new lieu
                            updateLieuOptions();
                            lieuSelect.value = data.lieu.id;
                            updateLieuDetails();

                            // Hide modal
                            const modalElement = document.getElementById('lieuModal');
                            const modalInstance = bootstrap.Modal.getInstance(modalElement);
                            if (modalInstance) {
                                modalInstance.hide();
                            }
                            this.reset();

                            // Show success message
                            const flashContainer = document.querySelector('main');
                            const flashDiv = document.createElement('div');
                            flashDiv.className = 'alert alert-success alert-dismissible fade show';
                            flashDiv.innerHTML = `
                                Lieu "${data.lieu.nom_lieu}" bien créé !
                                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                            `;
                            flashContainer.insertBefore(flashDiv, flashContainer.firstChild);
                        } else {
                            errorsDiv.innerHTML = data.error || 'Une erreur est survenue.';
                            errorsDiv.classList.remove('d-none');
                        }
                    })
                    .catch(error => {
                        errorsDiv.innerHTML = error.message || 'Erreur de connexion au serveur';
                        errorsDiv.classList.remove('d-none');
                    });
                });
            }

            // Initialize when DOM is ready
            if (document.readyState === 'loading') {
                document.addEventListener('DOMContentLoaded', initializeLieuModal);
            } else {
                initializeLieuModal();
            }
        </script>

{% endblock %}
